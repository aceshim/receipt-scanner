// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders the loading screen 1`] = `<ExponentAppLoading />`;

exports[`renders the root without loading screen 1`] = `
<View
  style={
    Object {
      "backgroundColor": "#fff",
      "flex": 1,
    }
  }
>
  <View
    onLayout={[Function]}
    style={
      Array [
        Object {
          "flex": 1,
        },
      ]
    }
  >
    <View
      onMoveShouldSetResponder={[Function]}
      onMoveShouldSetResponderCapture={[Function]}
      onResponderEnd={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderReject={[Function]}
      onResponderRelease={[Function]}
      onResponderStart={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      onStartShouldSetResponderCapture={[Function]}
      style={
        Array [
          Object {
            "flex": 1,
            "flexDirection": "column-reverse",
          },
          Object {
            "backgroundColor": "#000",
          },
        ]
      }
    >
      <View
        style={
          Object {
            "flex": 1,
          }
        }
      >
        <View
          collapsable={undefined}
          pointerEvents="auto"
          style={
            Object {
              "backgroundColor": "#EFEFF4",
              "bottom": 0,
              "left": 0,
              "opacity": 1,
              "position": "absolute",
              "right": 0,
              "shadowColor": "black",
              "shadowOffset": Object {
                "height": 0,
                "width": 0,
              },
              "shadowOpacity": 0.2,
              "shadowRadius": 5,
              "top": 0,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
                Object {
                  "translateY": 0,
                },
              ],
            }
          }
        >
          <View
            keyboardVerticalOffset={0}
            onLayout={[Function]}
            style={
              Array [
                Object {
                  "backgroundColor": "#ffffff",
                  "flex": 1,
                },
                Object {
                  "paddingBottom": 0,
                },
              ]
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "flexGrow": 1,
                  "justifyContent": "center",
                }
              }
            >
              <Image
                resizeMode="contain"
                source={1}
                style={
                  Object {
                    "flex": 0.7,
                  }
                }
              />
            </View>
            <View
              style={undefined}
            >
              <View
                style={
                  Object {
                    "padding": 20,
                  }
                }
              >
                <TextInput
                  allowFontScaling={true}
                  autoCapitalize="none"
                  autoCorrect={false}
                  keyboardType="email-address"
                  onChange={[Function]}
                  onSubmitEditing={[Function]}
                  placeholder="Email or Username"
                  placeholderTextColor="rgba(25,25,25,0.7)"
                  returnKeyType="next"
                  style={
                    Object {
                      "backgroundColor": "rgba(125,125,125,0.2)",
                      "color": "black",
                      "height": 40,
                      "marginBottom": 10,
                      "padding": 10,
                    }
                  }
                />
                <TextInput
                  allowFontScaling={true}
                  onChange={[Function]}
                  placeholder="Password"
                  placeholderTextColor="rgba(25,25,25,0.7)"
                  returnKeyType="done"
                  secureTextEntry={true}
                  style={
                    Object {
                      "backgroundColor": "rgba(125,125,125,0.2)",
                      "color": "black",
                      "height": 40,
                      "marginBottom": 10,
                      "padding": 10,
                    }
                  }
                />
                <View
                  accessibilityComponentType={undefined}
                  accessibilityLabel={undefined}
                  accessibilityTraits={undefined}
                  accessible={true}
                  collapsable={undefined}
                  hasTVPreferredFocus={undefined}
                  hitSlop={undefined}
                  isTVSelectable={true}
                  nativeID={undefined}
                  onLayout={undefined}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#74090e",
                      "opacity": 1,
                      "paddingVertical": 15,
                    }
                  }
                  testID={undefined}
                  tvParallaxProperties={undefined}
                >
                  <Text
                    accessible={true}
                    allowFontScaling={true}
                    ellipsizeMode="tail"
                    style={
                      Object {
                        "color": "#fff",
                        "fontWeight": "700",
                        "textAlign": "center",
                      }
                    }
                  >
                    LOGIN
                  </Text>
                </View>
              </View>
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
